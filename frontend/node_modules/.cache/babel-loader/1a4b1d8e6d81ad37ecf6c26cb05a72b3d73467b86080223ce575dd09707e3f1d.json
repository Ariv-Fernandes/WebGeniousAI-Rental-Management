{"ast":null,"code":"const {\n  existsSync\n} = require('node:fs');\nconst {\n  join\n} = require('node:path');\nconst {\n  platform,\n  arch,\n  report\n} = require('node:process');\nconst isMusl = () => !report.getReport().header.glibcVersionRuntime;\nconst bindingsByPlatformAndArch = {\n  android: {\n    arm: {\n      base: 'android-arm-eabi'\n    },\n    arm64: {\n      base: 'android-arm64'\n    }\n  },\n  darwin: {\n    arm64: {\n      base: 'darwin-arm64'\n    },\n    x64: {\n      base: 'darwin-x64'\n    }\n  },\n  linux: {\n    arm: {\n      base: 'linux-arm-gnueabihf',\n      musl: null\n    },\n    arm64: {\n      base: 'linux-arm64-gnu',\n      musl: 'linux-arm64-musl'\n    },\n    riscv64: {\n      base: 'linux-riscv64-gnu',\n      musl: null\n    },\n    x64: {\n      base: 'linux-x64-gnu',\n      musl: 'linux-x64-musl'\n    }\n  },\n  win32: {\n    arm64: {\n      base: 'win32-arm64-msvc'\n    },\n    ia32: {\n      base: 'win32-ia32-msvc'\n    },\n    x64: {\n      base: 'win32-x64-msvc'\n    }\n  }\n};\nconst msvcLinkFilenameByArch = {\n  arm64: 'vc_redist.arm64.exe',\n  ia32: 'vc_redist.x86.exe',\n  x64: 'vc_redist.x64.exe'\n};\nconst packageBase = getPackageBase();\nif (!packageBase) {\n  throw new Error(`Your current platform \"${platform}\" and architecture \"${arch}\" combination is not yet supported by the native Rollup build. Please use the WASM build \"@rollup/wasm-node\" instead.\n\nThe following platform-architecture combinations are supported:\n${Object.entries(bindingsByPlatformAndArch).flatMap(([platformName, architectures]) => Object.entries(architectures).flatMap(([architectureName, {\n    musl\n  }]) => {\n    const name = `${platformName}-${architectureName}`;\n    return musl ? [name, `${name} (musl)`] : [name];\n  })).join('\\n')}\n\nIf this is important to you, please consider supporting Rollup to make a native build for your platform and architecture available.`);\n}\nfunction getPackageBase() {\n  const imported = bindingsByPlatformAndArch[platform]?.[arch];\n  if (!imported) {\n    return null;\n  }\n  if ('musl' in imported && isMusl()) {\n    return imported.musl;\n  }\n  return imported.base;\n}\nconst localName = `./rollup.${packageBase}.node`;\nconst requireWithFriendlyError = id => {\n  try {\n    return require(id);\n  } catch (error) {\n    if (platform === 'win32' && error instanceof Error && error.code === 'ERR_DLOPEN_FAILED' && error.message.includes('The specified module could not be found')) {\n      const msvcDownloadLink = `https://aka.ms/vs/17/release/${msvcLinkFilenameByArch[arch]}`;\n      throw new Error(`Failed to load module ${id}. ` + 'Required DLL was not found. ' + 'This error usually happens when Microsoft Visual C++ Redistributable is not installed. ' + `You can download it from ${msvcDownloadLink}`, {\n        cause: error\n      });\n    }\n    throw new Error(`Cannot find module ${id}. ` + `npm has a bug related to optional dependencies (https://github.com/npm/cli/issues/4828). ` + 'Please try `npm i` again after removing both package-lock.json and node_modules directory.', {\n      cause: error\n    });\n  }\n};\nconst {\n  parse,\n  parseAsync,\n  xxhashBase64Url\n} = requireWithFriendlyError(existsSync(join(__dirname, localName)) ? localName : `@rollup/rollup-${packageBase}`);\nmodule.exports.parse = parse;\nmodule.exports.parseAsync = parseAsync;\nmodule.exports.xxhashBase64Url = xxhashBase64Url;","map":{"version":3,"names":["existsSync","require","join","platform","arch","report","isMusl","getReport","header","glibcVersionRuntime","bindingsByPlatformAndArch","android","arm","base","arm64","darwin","x64","linux","musl","riscv64","win32","ia32","msvcLinkFilenameByArch","packageBase","getPackageBase","Error","Object","entries","flatMap","platformName","architectures","architectureName","name","imported","localName","requireWithFriendlyError","id","error","code","message","includes","msvcDownloadLink","cause","parse","parseAsync","xxhashBase64Url","__dirname","module","exports"],"sources":["C:/Users/harti/OneDrive/Desktop/WebGeniousAI-Rental-Management-KeshavD/frontend/node_modules/vite/node_modules/rollup/dist/native.js"],"sourcesContent":["const { existsSync } = require('node:fs');\nconst { join } = require('node:path');\nconst { platform, arch, report } = require('node:process');\n\nconst isMusl = () => !report.getReport().header.glibcVersionRuntime;\n\nconst bindingsByPlatformAndArch = {\n\tandroid: {\n\t\tarm: { base: 'android-arm-eabi' },\n\t\tarm64: { base: 'android-arm64' }\n\t},\n\tdarwin: {\n\t\tarm64: { base: 'darwin-arm64' },\n\t\tx64: { base: 'darwin-x64' }\n\t},\n\tlinux: {\n\t\tarm: { base: 'linux-arm-gnueabihf', musl: null },\n\t\tarm64: { base: 'linux-arm64-gnu', musl: 'linux-arm64-musl' },\n\t\triscv64: { base: 'linux-riscv64-gnu', musl: null },\n\t\tx64: { base: 'linux-x64-gnu', musl: 'linux-x64-musl' }\n\t},\n\twin32: {\n\t\tarm64: { base: 'win32-arm64-msvc' },\n\t\tia32: { base: 'win32-ia32-msvc' },\n\t\tx64: { base: 'win32-x64-msvc' }\n\t}\n};\n\nconst msvcLinkFilenameByArch = {\n\tarm64: 'vc_redist.arm64.exe',\n\tia32: 'vc_redist.x86.exe',\n\tx64: 'vc_redist.x64.exe'\n};\n\nconst packageBase = getPackageBase();\n\nif (!packageBase) {\n\tthrow new Error(\n\t\t`Your current platform \"${platform}\" and architecture \"${arch}\" combination is not yet supported by the native Rollup build. Please use the WASM build \"@rollup/wasm-node\" instead.\n\nThe following platform-architecture combinations are supported:\n${Object.entries(bindingsByPlatformAndArch)\n\t.flatMap(([platformName, architectures]) =>\n\t\tObject.entries(architectures).flatMap(([architectureName, { musl }]) => {\n\t\t\tconst name = `${platformName}-${architectureName}`;\n\t\t\treturn musl ? [name, `${name} (musl)`] : [name];\n\t\t})\n\t)\n\t.join('\\n')}\n\nIf this is important to you, please consider supporting Rollup to make a native build for your platform and architecture available.`\n\t);\n}\n\nfunction getPackageBase() {\n\tconst imported = bindingsByPlatformAndArch[platform]?.[arch];\n\tif (!imported) {\n\t\treturn null;\n\t}\n\tif ('musl' in imported && isMusl()) {\n\t\treturn imported.musl;\n\t}\n\treturn imported.base;\n}\n\nconst localName = `./rollup.${packageBase}.node`;\nconst requireWithFriendlyError = id => {\n\ttry {\n\t\treturn require(id);\n\t} catch (error) {\n\t\tif (\n\t\t\tplatform === 'win32' &&\n\t\t\terror instanceof Error &&\n\t\t\terror.code === 'ERR_DLOPEN_FAILED' &&\n\t\t\terror.message.includes('The specified module could not be found')\n\t\t) {\n\t\t\tconst msvcDownloadLink = `https://aka.ms/vs/17/release/${msvcLinkFilenameByArch[arch]}`;\n\t\t\tthrow new Error(\n\t\t\t\t`Failed to load module ${id}. ` +\n\t\t\t\t\t'Required DLL was not found. ' +\n\t\t\t\t\t'This error usually happens when Microsoft Visual C++ Redistributable is not installed. ' +\n\t\t\t\t\t`You can download it from ${msvcDownloadLink}`,\n\t\t\t\t{ cause: error }\n\t\t\t);\n\t\t}\n\n\t\tthrow new Error(\n\t\t\t`Cannot find module ${id}. ` +\n\t\t\t\t`npm has a bug related to optional dependencies (https://github.com/npm/cli/issues/4828). ` +\n\t\t\t\t'Please try `npm i` again after removing both package-lock.json and node_modules directory.',\n\t\t\t{ cause: error }\n\t\t);\n\t}\n};\n\nconst { parse, parseAsync, xxhashBase64Url } = requireWithFriendlyError(\n\texistsSync(join(__dirname, localName)) ? localName : `@rollup/rollup-${packageBase}`\n);\n\nmodule.exports.parse = parse;\nmodule.exports.parseAsync = parseAsync;\nmodule.exports.xxhashBase64Url = xxhashBase64Url;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}